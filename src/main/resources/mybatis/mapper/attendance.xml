<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.mycompany.webapp.attendance.repository.AttendanceRepository">
	
	<!-- 스케쥴러 테스트 -->
	<select id="selectTotalEmpId" resultType="string">
		select emp_id as empId
		from employees
	</select>
	
	<!-- 스케쥴러 테스트 -->
	<insert id="insertThisWeek" parameterType="string">
		INSERT INTO
		ATTENDANCE
		(attendance_id,emp_id,clock_in,clock_out,attendance_date,status)
		VALUES
		(seq_attendance.NEXTVAL,#{empId},#{clock_in},#{clock_out},#{date},'출근')
	</insert>
	
	<!-- 사원의 오늘날짜 출근기록 조회 -->
	<select id="selectAttendance" parameterType="map"
		resultType="attendance">
		select attendance_id as "attendanceId", TO_char(clock_in,
		'HH24:MI:SS') as clockIn ,TO_char(clock_out, 'HH24:MI:SS') as
		clockOut, attendance_date as attendanceDate, status
		from attendance
		where emp_id= #{empId}
		and TO_CHAR(attendance_date, 'YYYYMMdd') = #{attDate}
	</select>
	
	<!-- 사원의 이번달 출근 상태 달력 조회 -->
	<select id="selectAttStatusCal" parameterType="map"
		resultType="string">
	 <![CDATA[
	 	select status
		from attendance a right outer join (
		SELECT TO_DATE(#{startDay}, 'YYYY-MM-DD') + (LEVEL-1) AS DT
		   FROM DUAL
		CONNECT BY LEVEL <= (TO_DATE(#{endDay}, 'YYYY-MM-DD') - TO_DATE(#{startDay}, 'YYYY-MM-DD')) + 1
		) on  to_char(a.attendance_date,'yy-mm-dd') = to_char(DT,'yy-mm-dd') and a.emp_id = #{empId}
		order by DT asc
	 ]]>
	</select>
	
	<!-- 출근버튼 클릭 -->
	<insert id="insertAttendance" parameterType="map">
		INSERT INTO
		attendance
		(attendance_id, emp_id, clock_in, clock_out, attendance_date, status)
		VALUES
		(seq_attendance.NEXTVAL,#{empId}, sysdate, null ,sysdate, #{status})
	</insert>
	
	<!-- 출근 눌렀을 때 -> 반차일 경우 -->
	<update id="updateAttClockIn" parameterType="int">
		update attendance
		set clock_in = sysdate
		where attendance_id = #{attendanceId}
	</update>
	
	<!-- 퇴근 눌렀을 때 -->
	<update id="updateAttClockOut" parameterType="int">
		update attendance
		set clock_out = sysdate
		where attendance_id = #{attendanceId}
	</update>
	
	<!-- 결근자 조회 -->
	<select id="selectEmpAbsent" resultType="string">
	select e.emp_id 
	from employees e 
	left outer join(
        select emp_id 
		from attendance
		where
		to_char(attendance_date,'YYYYMMdd') = #{today}) a 
	on e.emp_id = a.emp_id
	where a.emp_id is null
	</select>
	
	<!-- 결근자 결근으로 넣기 -->
	<insert id="insertEmpAbsent" parameterType="map">
		INSERT INTO
		ATTENDANCE
		(attendance_id,emp_id,clock_in,clock_out,attendance_date,status)
		VALUES
		(seq_attendance.NEXTVAL,#{empAbsent},null,null,#{today},'결근')
	</insert>
	
	<!-- 퇴근 미처리  조회-->
	<select id="selectNotOutEmp" parameterType="string" resultType="Integer">
		select attendance_id
		from attendance
		where clock_in is not null and clock_out is null
		and to_char(attendance_date,'YYYYMMdd')=#{today}
	</select>
	
	<!-- 퇴근 미처리자 퇴근미처리로 수정 -->
	<update id="updateEmpOut" parameterType="int">
		UPDATE ATTENDANCE
		SET status = '퇴근미처리'
		where attendance_id = #{empNotOut} 
	</update>
	
	<!-- 나의 근무 현황 -->
	<select id="selectTotalAtt" parameterType="string"
		resultType="attendance">
		select TO_char(clock_in, 'HH24:MI') as clockIn ,TO_char(clock_out,
		'HH24:MI') as clockOut, attendance_date as attendanceDate, status
		from
		attendance
		where emp_id= #{empId}
	</select>
	
	<!-- 주 근무 현황 -->
	<select id="selectStatus" parameterType="map"
		resultType="string">
		select status
		from attendance
		WHERE EMP_ID = #{empId} AND TO_CHAR(attendance_date, 'YY.MM.dd') = #{i}
	</select>
	
	<!-- 주 근무현황 -->
	<select id="selectLateTime" parameterType="map"
		resultType="Integer">
		select TO_NUMBER(to_char(clock_in,'HH24')) - TO_NUMBER(9) + 1
		from attendance
		where emp_id =#{empId} and TO_CHAR(attendance_date, 'YY.MM.dd') = #{today}
	</select>
	
	<!-- 월 근무 통계 -->
	<select id="selectMonthCount" parameterType="map"
		resultType="attendanceMonthStatus">
		select (
		select count (*)
		from attendance
		WHERE EMP_ID = #{empId} AND TO_CHAR(attendance_date, 'YY.MM') = #{month}
		and status = '출근'
		) as "attCount",
		(
		select count (*)
		from attendance
		WHERE EMP_ID = #{empId} AND TO_CHAR(attendance_date, 'YY.MM') = #{month}
		and status = '지각'
		) as "lateCount",
		(
		select count (*)
		from attendance
		WHERE EMP_ID = #{empId} AND TO_CHAR(attendance_date, 'YY.MM') = #{month}
		and status = '결근'
		) as "absentCoutn",
		(
		select count (*) *0.5
		from attendance
		WHERE EMP_ID = #{empId} AND TO_CHAR(attendance_date, 'YY.MM') = #{month}
		and status in('오후반차' ,'오전반차')
		) as "halfCount",
		(
		select count (*)
		from attendance
		WHERE EMP_ID = #{empId} AND TO_CHAR(attendance_date, 'YY.MM') = #{month}
		and status = '퇴근미처리'
		) as "notClockOut",
		(
		select count (*)
		from attendance
		WHERE EMP_ID = #{empId} AND TO_CHAR(attendance_date, 'YY.MM') = #{month}
		and status in('경조사(결혼)' ,'경조사(출산)','경조사(사망)','연차')
		) as "EventCount",
		(
		select count (*)
		from attendance
		WHERE EMP_ID = #{empId} AND TO_CHAR(attendance_date, 'YY.MM') = #{month}
		and status = '연장근무'
		) as "overTime"
		from attendance
		where rownum=1
	</select>
	
</mapper>